interactions:
- request:
    body: '{"messages": [{"role": "system", "content": "You are Crew Manager. You
      are a seasoned manager with a knack for getting the best out of your team.\nYou
      are also known for your ability to delegate work to the right people, and to
      ask the right questions to get the best out of your team.\nEven though you don''t
      perform tasks by yourself, you have a lot of experience in the field, which
      allows you to properly evaluate the work of your team members.\nYour personal
      goal is: Manage the team to complete the task in the best way possible.\nYou
      ONLY have access to the following tools, and should NEVER make up tools that
      are not listed here:\n\nTool Name: Delegate work to coworker(task: str, context:
      str, coworker: Optional[str] = None, **kwargs)\nTool Description: Delegate a
      specific task to one of the following coworkers: Researcher\nThe input to this
      tool should be the coworker, the task you want them to do, and ALL necessary
      context to execute the task, they know nothing about the task, so share absolute
      everything you know, don''t reference things but instead explain them.\nTool
      Arguments: {''task'': {''title'': ''Task'', ''type'': ''string''}, ''context'':
      {''title'': ''Context'', ''type'': ''string''}, ''coworker'': {''title'': ''Coworker'',
      ''type'': ''string''}, ''kwargs'': {''title'': ''Kwargs'', ''type'': ''object''}}\nTool
      Name: Ask question to coworker(question: str, context: str, coworker: Optional[str]
      = None, **kwargs)\nTool Description: Ask a specific question to one of the following
      coworkers: Researcher\nThe input to this tool should be the coworker, the question
      you have for them, and ALL necessary context to ask the question properly, they
      know nothing about the question, so share absolute everything you know, don''t
      reference things but instead explain them.\nTool Arguments: {''question'': {''title'':
      ''Question'', ''type'': ''string''}, ''context'': {''title'': ''Context'', ''type'':
      ''string''}, ''coworker'': {''title'': ''Coworker'', ''type'': ''string''},
      ''kwargs'': {''title'': ''Kwargs'', ''type'': ''object''}}\n\nUse the following
      format:\n\nThought: you should always think about what to do\nAction: the action
      to take, only one name of [Delegate work to coworker, Ask question to coworker],
      just the name, exactly as it''s written.\nAction Input: the input to the action,
      just a simple python dictionary, enclosed in curly braces, using \" to wrap
      keys and values.\nObservation: the result of the action\n\nOnce all necessary
      information is gathered:\n\nThought: I now know the final answer\nFinal Answer:
      the final answer to the original input question\n"}, {"role": "user", "content":
      "\nCurrent Task: Ask the researched to say hi!\n\nThis is the expect criteria
      for your final answer: Howdy!\nyou MUST return the actual complete content as
      the final answer, not a summary.\n\nBegin! This is VERY important to you, use
      the tools available and give your best Final Answer, your job depends on it!\n\nThought:"}],
      "model": "gpt-4o", "stop": ["\nResult"]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '2926'
      content-type:
      - application/json
      cookie:
      - _cfuvid=Bz2zevKuFYZqnEFwqmqVHcRo5pT0fm0fTtc_6_VQs4g-1726379702153-0.0.1.1-604800000;
        __cf_bm=Zqss5M7F0I3ujWWOyeGVyXrXruQvD3butDltZlDeBZc-1726381512-1.0.1.1-qqM346NIgOQgZmuydOkCpKfALZSi1RxBHjWfy4KEzxJV2kEOuF._xS9AfJH5x.JhtJUFx8TkXZlNL6GanAA7nQ
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.45.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.45.0
      x-stainless-raw-response:
      - 'true'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.7
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    content: "{\n  \"id\": \"chatcmpl-A7dBeClrEZGsoTRWJZnVcqH0jNbik\",\n  \"object\":
      \"chat.completion\",\n  \"created\": 1726382294,\n  \"model\": \"gpt-4o-2024-05-13\",\n
      \ \"choices\": [\n    {\n      \"index\": 0,\n      \"message\": {\n        \"role\":
      \"assistant\",\n        \"content\": \"Thought: I need to communicate to the
      Researcher that they should say \\\"hi\\\" in the specific form of \\\"Howdy!\\\"
      to meet the expected criteria.\\n\\nAction: Ask question to coworker\\nAction
      Input: {\\\"question\\\": \\\"Can you say hi?\\\", \\\"context\\\": \\\"Please
      respond by saying 'Howdy!'. This specific phrase is important and needs to be
      used exactly as it is.\\\", \\\"coworker\\\": \\\"Researcher\\\"}\",\n        \"refusal\":
      null\n      },\n      \"logprobs\": null,\n      \"finish_reason\": \"stop\"\n
      \   }\n  ],\n  \"usage\": {\n    \"prompt_tokens\": 642,\n    \"completion_tokens\":
      87,\n    \"total_tokens\": 729,\n    \"completion_tokens_details\": {\n      \"reasoning_tokens\":
      0\n    }\n  },\n  \"system_fingerprint\": \"fp_25624ae3a5\"\n}\n"
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8c369cdb7b45743a-MIA
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Sun, 15 Sep 2024 06:38:15 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - crewai-iuxna1
      openai-processing-ms:
      - '901'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '30000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '29999290'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 1ms
      x-request-id:
      - req_1ec4ea3b8082e3ab9eb6a36c6efb7686
    http_version: HTTP/1.1
    status_code: 200
- request:
    body: '{"messages": [{"role": "system", "content": "You are Researcher. You''re
      love to sey howdy.\nYour personal goal is: Be super empathetic.\nTo give my
      best complete final answer to the task use the exact following format:\n\nThought:
      I now can give a great answer\nFinal Answer: Your final answer must be the great
      and the most complete as possible, it must be outcome described.\n\nI MUST use
      these formats, my job depends on it!"}, {"role": "user", "content": "\nCurrent
      Task: Can you say hi?\n\nThis is the expect criteria for your final answer:
      Your best answer to your coworker asking you this, accounting for the context
      shared.\nyou MUST return the actual complete content as the final answer, not
      a summary.\n\nThis is the context you''re working with:\nPlease respond by saying
      ''Howdy!''. This specific phrase is important and needs to be used exactly as
      it is.\n\nBegin! This is VERY important to you, use the tools available and
      give your best Final Answer, your job depends on it!\n\nThought:"}], "model":
      "gpt-4o", "stop": ["\nResult"]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '1044'
      content-type:
      - application/json
      cookie:
      - _cfuvid=Bz2zevKuFYZqnEFwqmqVHcRo5pT0fm0fTtc_6_VQs4g-1726379702153-0.0.1.1-604800000;
        __cf_bm=Zqss5M7F0I3ujWWOyeGVyXrXruQvD3butDltZlDeBZc-1726381512-1.0.1.1-qqM346NIgOQgZmuydOkCpKfALZSi1RxBHjWfy4KEzxJV2kEOuF._xS9AfJH5x.JhtJUFx8TkXZlNL6GanAA7nQ
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.45.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.45.0
      x-stainless-raw-response:
      - 'true'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.7
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    content: "{\n  \"id\": \"chatcmpl-A7dBgLOGpRozxm4WDngOLLygwxDRY\",\n  \"object\":
      \"chat.completion\",\n  \"created\": 1726382296,\n  \"model\": \"gpt-4o-2024-05-13\",\n
      \ \"choices\": [\n    {\n      \"index\": 0,\n      \"message\": {\n        \"role\":
      \"assistant\",\n        \"content\": \"Thought: I now can give a great answer\\nFinal
      Answer: Howdy!\",\n        \"refusal\": null\n      },\n      \"logprobs\":
      null,\n      \"finish_reason\": \"stop\"\n    }\n  ],\n  \"usage\": {\n    \"prompt_tokens\":
      205,\n    \"completion_tokens\": 16,\n    \"total_tokens\": 221,\n    \"completion_tokens_details\":
      {\n      \"reasoning_tokens\": 0\n    }\n  },\n  \"system_fingerprint\": \"fp_25624ae3a5\"\n}\n"
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8c369ce69921743a-MIA
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Sun, 15 Sep 2024 06:38:16 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - crewai-iuxna1
      openai-processing-ms:
      - '247'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '30000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '29999755'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_9fa88c3d2864945204c78219ce4ad3db
    http_version: HTTP/1.1
    status_code: 200
- request:
    body: !!binary |
      CpgVCiQKIgoMc2VydmljZS5uYW1lEhIKEGNyZXdBSS10ZWxlbWV0cnkS7xQKEgoQY3Jld2FpLnRl
      bGVtZXRyeRKQAgoQ047wGg7qe0ftclgGsmSF4BIImTJCq5MiDJ0qDlRhc2sgRXhlY3V0aW9uMAE5
      2DwzlYtX9RdBwNyNUoxX9RdKLgoIY3Jld19rZXkSIgogMTdhNmNhMDNkODUwZmUyZjMwYzBhMTA1
      MWFkNWY3ZTRKMQoHY3Jld19pZBImCiQ0NjA3ZGJmNC03ZTJlLTQ3ODEtOTU1NC1mYmJhNzM1M2Ew
      MzRKLgoIdGFza19rZXkSIgogZjU5NDkyMDhkNmYzOWVlOTBhZDAwZTk3MWMxNGFkZDNKMQoHdGFz
      a19pZBImCiRhNzA5ZjRlZi02YmRhLTQ0ZWEtYTJiYi05OWRjOWVkZDYwMDZ6AhgBhQEAAQAAEqAH
      ChDSvVQq6qfWvCMHLPtPVkd9EgihiIjY2/DWoioMQ3JldyBDcmVhdGVkMAE5ALdUU4xX9RdBIPNX
      U4xX9RdKGgoOY3Jld2FpX3ZlcnNpb24SCAoGMC41Ni4wShoKDnB5dGhvbl92ZXJzaW9uEggKBjMu
      MTEuN0ouCghjcmV3X2tleRIiCiA2MWE2MGQ1YjM2MDIxZDFhZGE1NDM0ZWIyZTM4ODZlZUoxCgdj
      cmV3X2lkEiYKJDlhYWU0MTkyLTlmZjYtNDVjNi05M2NiLTlkMzZmNzhkYzAwNEocCgxjcmV3X3By
      b2Nlc3MSDAoKc2VxdWVudGlhbEoRCgtjcmV3X21lbW9yeRICEABKGgoUY3Jld19udW1iZXJfb2Zf
      dGFza3MSAhgBShsKFWNyZXdfbnVtYmVyX29mX2FnZW50cxICGAFKzgIKC2NyZXdfYWdlbnRzEr4C
      CrsCW3sia2V5IjogImY1ZWE5NzA1Yjc4N2Y3ODI1MTQyYzg3NGI1ODcyNmM4IiwgImlkIjogIjQz
      M2YxMTZhLTIyZGItNDFmMy1iNzUzLWI1OWY1OGE0YTYyMSIsICJyb2xlIjogIlJlc2VhcmNoZXIi
      LCAidmVyYm9zZT8iOiBmYWxzZSwgIm1heF9pdGVyIjogMTUsICJtYXhfcnBtIjogbnVsbCwgImZ1
      bmN0aW9uX2NhbGxpbmdfbGxtIjogbnVsbCwgImxsbSI6ICJncHQtNG8iLCAiZGVsZWdhdGlvbl9l
      bmFibGVkPyI6IGZhbHNlLCAiYWxsb3dfY29kZV9leGVjdXRpb24/IjogZmFsc2UsICJtYXhfcmV0
      cnlfbGltaXQiOiAyLCAidG9vbHNfbmFtZXMiOiBbXX1dSv8BCgpjcmV3X3Rhc2tzEvABCu0BW3si
      a2V5IjogImY0NTY3OTIxMmQ3YmYzNzVkMTFjMjg0MjBmYjcyZDI0IiwgImlkIjogImFkZmZmNmM4
      LWRiZjYtNGI0ZC05YmVmLTY5YWIzODU4ZDExNSIsICJhc3luY19leGVjdXRpb24/IjogZmFsc2Us
      ICJodW1hbl9pbnB1dD8iOiBmYWxzZSwgImFnZW50X3JvbGUiOiAiUmVzZWFyY2hlciIsICJhZ2Vu
      dF9rZXkiOiAiZjVlYTk3MDViNzg3Zjc4MjUxNDJjODc0YjU4NzI2YzgiLCAidG9vbHNfbmFtZXMi
      OiBbXX1degIYAYUBAAEAABKOAgoQVP5qJprU+17ZhAmxwtf+nBII/hTJW5g8pvEqDFRhc2sgQ3Jl
      YXRlZDABOTAMhFOMV/UXQSBihFOMV/UXSi4KCGNyZXdfa2V5EiIKIDYxYTYwZDViMzYwMjFkMWFk
      YTU0MzRlYjJlMzg4NmVlSjEKB2NyZXdfaWQSJgokOWFhZTQxOTItOWZmNi00NWM2LTkzY2ItOWQz
      NmY3OGRjMDA0Si4KCHRhc2tfa2V5EiIKIGY0NTY3OTIxMmQ3YmYzNzVkMTFjMjg0MjBmYjcyZDI0
      SjEKB3Rhc2tfaWQSJgokYWRmZmY2YzgtZGJmNi00YjRkLTliZWYtNjlhYjM4NThkMTE1egIYAYUB
      AAEAABKQAgoQF9Hx/1Pyibqn8K6GWJShYxII8FhFxFoAFTMqDlRhc2sgRXhlY3V0aW9uMAE5AJGE
      U4xX9RdBKMRfs4xX9RdKLgoIY3Jld19rZXkSIgogNjFhNjBkNWIzNjAyMWQxYWRhNTQzNGViMmUz
      ODg2ZWVKMQoHY3Jld19pZBImCiQ5YWFlNDE5Mi05ZmY2LTQ1YzYtOTNjYi05ZDM2Zjc4ZGMwMDRK
      LgoIdGFza19rZXkSIgogZjQ1Njc5MjEyZDdiZjM3NWQxMWMyODQyMGZiNzJkMjRKMQoHdGFza19p
      ZBImCiRhZGZmZjZjOC1kYmY2LTRiNGQtOWJlZi02OWFiMzg1OGQxMTV6AhgBhQEAAQAAEv4GChC+
      1gKhJb1cnDkZaEcwRS8bEghZdxQ4PTmuryoMQ3JldyBDcmVhdGVkMAE5CDpjtIxX9RdBuOdktIxX
      9RdKGgoOY3Jld2FpX3ZlcnNpb24SCAoGMC41Ni4wShoKDnB5dGhvbl92ZXJzaW9uEggKBjMuMTEu
      N0ouCghjcmV3X2tleRIiCiBmYjUxNTg5NWJlNmM3ZDNjOGQ2ZjFkOTI5OTk2MWQ1MUoxCgdjcmV3
      X2lkEiYKJDA3Y2E3YjI5LTU5NDctNDU3Ny05NmFkLWYwYjNjMWI1ZWU2NkoeCgxjcmV3X3Byb2Nl
      c3MSDgoMaGllcmFyY2hpY2FsShEKC2NyZXdfbWVtb3J5EgIQAEoaChRjcmV3X251bWJlcl9vZl90
      YXNrcxICGAFKGwoVY3Jld19udW1iZXJfb2ZfYWdlbnRzEgIYAUrOAgoLY3Jld19hZ2VudHMSvgIK
      uwJbeyJrZXkiOiAiZjVlYTk3MDViNzg3Zjc4MjUxNDJjODc0YjU4NzI2YzgiLCAiaWQiOiAiOTA1
      MWI0NzktNGM1Ni00YWFiLTliZjQtZDJmYmE4YTM2MzYwIiwgInJvbGUiOiAiUmVzZWFyY2hlciIs
      ICJ2ZXJib3NlPyI6IGZhbHNlLCAibWF4X2l0ZXIiOiAxNSwgIm1heF9ycG0iOiBudWxsLCAiZnVu
      Y3Rpb25fY2FsbGluZ19sbG0iOiBudWxsLCAibGxtIjogImdwdC00byIsICJkZWxlZ2F0aW9uX2Vu
      YWJsZWQ/IjogZmFsc2UsICJhbGxvd19jb2RlX2V4ZWN1dGlvbj8iOiBmYWxzZSwgIm1heF9yZXRy
      eV9saW1pdCI6IDIsICJ0b29sc19uYW1lcyI6IFtdfV1K2wEKCmNyZXdfdGFza3MSzAEKyQFbeyJr
      ZXkiOiAiYjk0OWZiMGIwYTFkMjRlMjg2NDhhYzRmZjk1ZGUyNTkiLCAiaWQiOiAiNWY4OGYzZmYt
      M2I5NC00MzU5LThiMWYtZTdkN2YzZGYwOWZiIiwgImFzeW5jX2V4ZWN1dGlvbj8iOiBmYWxzZSwg
      Imh1bWFuX2lucHV0PyI6IGZhbHNlLCAiYWdlbnRfcm9sZSI6ICJOb25lIiwgImFnZW50X2tleSI6
      IG51bGwsICJ0b29sc19uYW1lcyI6IFtdfV16AhgBhQEAAQAA
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '2715'
      Content-Type:
      - application/x-protobuf
      User-Agent:
      - OTel-OTLP-Exporter-Python/1.27.0
    method: POST
    uri: https://telemetry.crewai.com:4319/v1/traces
  response:
    body:
      string: "\n\0"
    headers:
      Content-Length:
      - '2'
      Content-Type:
      - application/x-protobuf
      Date:
      - Sun, 15 Sep 2024 06:38:17 GMT
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "You are Crew Manager. You
      are a seasoned manager with a knack for getting the best out of your team.\nYou
      are also known for your ability to delegate work to the right people, and to
      ask the right questions to get the best out of your team.\nEven though you don''t
      perform tasks by yourself, you have a lot of experience in the field, which
      allows you to properly evaluate the work of your team members.\nYour personal
      goal is: Manage the team to complete the task in the best way possible.\nYou
      ONLY have access to the following tools, and should NEVER make up tools that
      are not listed here:\n\nTool Name: Delegate work to coworker(task: str, context:
      str, coworker: Optional[str] = None, **kwargs)\nTool Description: Delegate a
      specific task to one of the following coworkers: Researcher\nThe input to this
      tool should be the coworker, the task you want them to do, and ALL necessary
      context to execute the task, they know nothing about the task, so share absolute
      everything you know, don''t reference things but instead explain them.\nTool
      Arguments: {''task'': {''title'': ''Task'', ''type'': ''string''}, ''context'':
      {''title'': ''Context'', ''type'': ''string''}, ''coworker'': {''title'': ''Coworker'',
      ''type'': ''string''}, ''kwargs'': {''title'': ''Kwargs'', ''type'': ''object''}}\nTool
      Name: Ask question to coworker(question: str, context: str, coworker: Optional[str]
      = None, **kwargs)\nTool Description: Ask a specific question to one of the following
      coworkers: Researcher\nThe input to this tool should be the coworker, the question
      you have for them, and ALL necessary context to ask the question properly, they
      know nothing about the question, so share absolute everything you know, don''t
      reference things but instead explain them.\nTool Arguments: {''question'': {''title'':
      ''Question'', ''type'': ''string''}, ''context'': {''title'': ''Context'', ''type'':
      ''string''}, ''coworker'': {''title'': ''Coworker'', ''type'': ''string''},
      ''kwargs'': {''title'': ''Kwargs'', ''type'': ''object''}}\n\nUse the following
      format:\n\nThought: you should always think about what to do\nAction: the action
      to take, only one name of [Delegate work to coworker, Ask question to coworker],
      just the name, exactly as it''s written.\nAction Input: the input to the action,
      just a simple python dictionary, enclosed in curly braces, using \" to wrap
      keys and values.\nObservation: the result of the action\n\nOnce all necessary
      information is gathered:\n\nThought: I now know the final answer\nFinal Answer:
      the final answer to the original input question\n"}, {"role": "user", "content":
      "\nCurrent Task: Ask the researched to say hi!\n\nThis is the expect criteria
      for your final answer: Howdy!\nyou MUST return the actual complete content as
      the final answer, not a summary.\n\nBegin! This is VERY important to you, use
      the tools available and give your best Final Answer, your job depends on it!\n\nThought:"},
      {"role": "assistant", "content": "Thought: I need to communicate to the Researcher
      that they should say \"hi\" in the specific form of \"Howdy!\" to meet the expected
      criteria.\n\nAction: Ask question to coworker\nAction Input: {\"question\":
      \"Can you say hi?\", \"context\": \"Please respond by saying ''Howdy!''. This
      specific phrase is important and needs to be used exactly as it is.\", \"coworker\":
      \"Researcher\"}\nObservation: Howdy!"}], "model": "gpt-4o", "stop": ["\nResult"]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '3370'
      content-type:
      - application/json
      cookie:
      - _cfuvid=Bz2zevKuFYZqnEFwqmqVHcRo5pT0fm0fTtc_6_VQs4g-1726379702153-0.0.1.1-604800000;
        __cf_bm=Zqss5M7F0I3ujWWOyeGVyXrXruQvD3butDltZlDeBZc-1726381512-1.0.1.1-qqM346NIgOQgZmuydOkCpKfALZSi1RxBHjWfy4KEzxJV2kEOuF._xS9AfJH5x.JhtJUFx8TkXZlNL6GanAA7nQ
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.45.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.45.0
      x-stainless-raw-response:
      - 'true'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.7
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    content: "{\n  \"id\": \"chatcmpl-A7dBhuq34XGMtWyiGMPShmxdAERfs\",\n  \"object\":
      \"chat.completion\",\n  \"created\": 1726382297,\n  \"model\": \"gpt-4o-2024-05-13\",\n
      \ \"choices\": [\n    {\n      \"index\": 0,\n      \"message\": {\n        \"role\":
      \"assistant\",\n        \"content\": \"Thought: I now know the final answer.\\nFinal
      Answer: Howdy!\",\n        \"refusal\": null\n      },\n      \"logprobs\":
      null,\n      \"finish_reason\": \"stop\"\n    }\n  ],\n  \"usage\": {\n    \"prompt_tokens\":
      738,\n    \"completion_tokens\": 15,\n    \"total_tokens\": 753,\n    \"completion_tokens_details\":
      {\n      \"reasoning_tokens\": 0\n    }\n  },\n  \"system_fingerprint\": \"fp_25624ae3a5\"\n}\n"
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8c369ce9faf5743a-MIA
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Sun, 15 Sep 2024 06:38:17 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - crewai-iuxna1
      openai-processing-ms:
      - '291'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '30000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '29999192'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 1ms
      x-request-id:
      - req_0c37718cd0a2e822fd8894284f0c3ffc
    http_version: HTTP/1.1
    status_code: 200
version: 1
