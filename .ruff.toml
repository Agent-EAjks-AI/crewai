exclude = [
    "templates",
    "__init__.py",
]

[lint]
select = ["ALL"]
ignore = [
    "D100",  # Missing docstring in public module
    "D101",  # Missing docstring in public class
    "D102",  # Missing docstring in public method
    "D103",  # Missing docstring in public function
    "D104",  # Missing docstring in public package
    "D105",  # Missing docstring in magic method
    "D106",  # Missing docstring in public nested class
    "D107",  # Missing docstring in __init__
    "D205",  # 1 blank line required between summary line and description
    "ANN001",  # Missing type annotation for function argument
    "ANN002",  # Missing type annotation for *args
    "ANN003",  # Missing type annotation for **kwargs
    "ANN201",  # Missing return type annotation for public function
    "ANN202",  # Missing return type annotation for private function
    "ANN204",  # Missing return type annotation for special method
    "ANN205",  # Missing return type annotation for staticmethod
    "ANN206",  # Missing return type annotation for classmethod
    "E501",  # Line too long
    "PT011",  # pytest.raises() without match parameter
    "PT012",  # pytest.raises() block should contain a single simple statement
    "SIM117",  # Use a single `with` statement with multiple contexts
    "PLR2004",  # Magic value used in comparison
    "B017",  # Do not assert blind exception
]

[lint.per-file-ignores]
"tests/*" = [
    "S101",  # Allow assert in tests
    "SLF001",  # Allow private member access in tests
    "DTZ001",  # Allow datetime without tzinfo in tests
    "PTH107",  # Allow os.remove instead of Path.unlink in tests
    "PTH118",  # Allow os.path.join() in tests
    "PTH120",  # Allow os.path.dirname() in tests
    "PTH123",  # Allow open() instead of Path.open() in tests
    "PTH202",  # Allow os.path.getsize in tests
    "PT012",  # Allow multiple statements in pytest.raises() block in tests
    "SIM117",  # Allow nested with statements in tests
    "PLR2004",  # Allow magic values in tests
    "B017",  # Allow asserting blind exceptions in tests
]

[lint.isort]
known-first-party = ["crewai"]
